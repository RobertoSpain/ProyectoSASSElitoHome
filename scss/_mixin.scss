@use 'sass:color'; // Importar el módulo de colores

// Mixin para crear layouts CSS con grid
@mixin grid($columns, $rows) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  grid-template-rows: repeat($rows, auto);
  gap: 1rem;
}

// Mixin para generar un botón
@mixin button($bg, $fg) {
  background-color: $bg;
  color: $fg;
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 0.25rem;
  cursor: pointer;
  transition: background-color 0.3s ease;
  &:hover {
    background-color: color.adjust($bg, $lightness: -10%);
  }
}

@mixin page-size($maxWidth: 75rem) {
  max-width: $maxWidth;
  margin: 0 auto;
}

// Mixin para componentes flex
@mixin flex($direction: row, $justify: center, $align: center) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

// Mixin para media responsiva
@mixin respond($breakpoint) {
  @if $breakpoint == "mobile" {
    @media (max-width: 30rem) {
      @content;
    }
  } @else if $breakpoint == "tablet" {
    @media (min-width: 30rem) and (max-width: 48rem) {
      @content;
    }
  } @else if $breakpoint == "desktop" {
    @media (min-width: 75rem) {
      @content;
    }
  }
}

// Mixin para definir dimensiones fijas a las cards
@mixin alto-ancho($width: 25rem, $height: 25rem) {
  width: $width;
  height: $height;
}

// Mixin para definir la grid del header
@mixin header-grid($columns, $rows, $gap: 2rem) {
  display: grid;
  grid-template-columns: $columns;
  grid-template-rows: $rows;
  grid-gap: $gap;
}